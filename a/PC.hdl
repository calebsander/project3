// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    //Decide whether to reset, load, or inc; note that at most one will be true
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=doload); //if reseting, can't load
    Not(in=doload, out=notload);
    And(a=notreset, b=notload, out=caninc); //if reseting or loading, can't inc
    And(a=caninc, b=inc, out=doinc);

    //Get value to set
    Or(a=doinc, b=reset, out=incorreset);
    Or(a=doload, b=reset, out=loadorreset);
    Inc16(in=lastval, out=onemore);
    Mux4Way16(a=lastval, b=in, c=onemore, d=false, sel[0]=loadorreset, sel[1]=incorreset, out=newval); //nothing, load, inc, reset

    //Set register value if necessary, connect it to the output
    Register(in=newval, load=true, out=lastval); //lastval == out, but needs to be used internally
    And16(a=lastval, b=true, out=out); //echo lastval to out
}
