// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    //Figure out what option to choose
    Or(a=reset, b=load, out=loadorreset); //if reset or load is used, other options are overridden
    Not(in=loadorreset, out=lastorinc);
    And(a=lastorinc, b=inc, out=doinc); //only if neither reset or load is used is inc possible
    Or(a=reset, b=doinc, out=incorreset);

    //Select between possible options
    Inc16(in=lastval, out=onemore);
    Mux4Way16(a=lastval, b=onemore, c=in, d=false, sel[1]=loadorreset, sel[0]=incorreset, out=newval); //nothing, load, inc, reset

    //Set register value if necessary, connect it to the output
    Register(in=newval, load=true, out=lastval); //lastval == out, but needs to be used internally
    And16(a=lastval, b=true, out=out); //echo lastval to out
}
